3/23/23 2:30PM
Hidden file for direct communication with higher powers.
I have no idea what I'm doing... but I suppose the process will be getting each container to listen to each other and transfer data between each other...
I'm mostly afraid of accidentally doing something expensive, but I'm trying my best to read the docs to ensure I'm doing everything right.
I think I'm going to first get the node server working (which it should, as it is essentially the same dockerfile from the demo app) and then try and get angular to talk to it. 
Once I get angular talking to the node app, I can then work on the database... and then the secrets manager.
I am not going to worry about "clean" data right now--I figure that this is something that can be done at a later stage.
I just feel like I might as well use this space to get my ideas out on paper in a plaintext format where you can see it--without having to bother other people about it.
But hey, might as well do it in a way that can be tracked, right? I suppose this file won't get tracked through git but I assume you have some sort of higher power force to track the changes of this file.
But from what I understand these four containers will compose a single pod that makes up my app, correct? If I define this to be my "pod" then deploying them as a kubernetes cluster should be simple.
I know the tutorial I saw (did you intentionally place that in my algorithm as a suggestion lol) had the database node running separate from the app, but I figured that the way I'm setting things up there shouldn't be a RW clash.
I think Firestore is robust enough that it should be able to handle the infrastructure I'm building. This way the app is very, and very fully scalable with each application pod running independently, and can be run locally as well. 
The idea of this running locally is that a makerspace who does not want their data being collected can run and host this app locally and use their own database infrastructure... but the way I set things up should make customizing
everything a cinch. Not sure... I'm honestly just very, very iteratively refining this. I have no idea what I'm doing, but this... feels right? I think? We'll see... I'm going to go get that node service up and running... 

3/23/23 3:30PM
Ok so this backend framework works I think? I think instead of where it's "getting" my talk.js file right now I need to get it to talk to and receive content to and from an angular server. I think that way there'll be a sort of layer 
of protection between the database and secrets manager and the frontend container... I'm just really worried I'm going to overlook some security policy with all of this, but I think the most important thing is that the database is
secure, which I know will automatically be secure bc IAM... 

Also I think I'm going to create yet *another* container that runs ChatGPT... so that it's just a super easy element to pluck out and stick in with Bard when necessary. I mean again this is my direct pitch to you so I might as well make
it elastic enough that Bard can eventually be shoved in where ChatGPT is... it shouldn't be too hard because container is container, once I figure out how to get one container working and talking with the others, it's not TOO difficult
to get a handful of them talking... I think so long as I keep it under 10 containers I should be good...
